version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: musicoson-pg
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-docker}
      POSTGRES_DB: ${DB_NAME:-musicoson}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-musicoson}"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  backend:
    build: .
    container_name: musicoson-api
    ports:
     - "${APP_PORT:-3333}:3333"
    environment:
      - NODE_ENV=production
      - PORT=3333
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-docker}@postgres:5432/${DB_NAME:-musicoson}?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        while ! nc -z postgres 5432; do
          echo 'Waiting for PostgreSQL...';
          sleep 2;
        done;
        npx prisma migrate deploy &&
        node dist/index.js
      "

volumes:
  postgres_data: